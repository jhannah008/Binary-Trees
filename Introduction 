What is a tree?
    - A data structure that consists of nodes in a parent/child relationship.
    - Each node can have more then one reference and point to different nodes. 
    - Trees vs Lists 
        - Trees: Nonlinear 
        - Lists: Linear
    - A node can only point to it's child (all nodes have to point away from the root)

Tree Terminology 
    - Root: the node in a tree
    - Child: A node directly connected to another node when moving away from the root.
    - Parent:  The converse notion of a child. 
    - Sibilings: A group of nodes with the same parent. 
    - Leaf: A node with no children 
    - Edge: The connection between one node and another

Uses for Trees
    - HTML DOM (Document Object Model)
    - Network Routing
    - Abstract Syntax Tree 
    - Artificial Intelligence 
    - Folders Modeled in a Operation System (moving directory to directory)

Kinds of Trees 
    - Trees
    - Binary Trees
        - Rule: each node can only have up to 2 children. 
    - Binary Search Trees
        - Rule: each node can only have up to 2 children. 
        - Rule: every node to the left of the parent node is always less than then the parent node.
        - Rule: every node to the right of the parent node is always greater than then the parent node.

Searching a Binary Search Tree 
    - Every parent node has at most 2 children 
    - Every node to the left of a parent node is always less than the parent.
    - Every node to the right of a parent node is always greater than the parent.

